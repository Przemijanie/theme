{#
/**
 * @file
 * Default theme implementation for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @see template_preprocess_field()
 *
 * @ingroup themeable
 */
#}
{%
  set title_classes = [
    label_display == 'visually_hidden' ? 'visually-hidden',
  ]
%}

{% if label_hidden %}
  {% if multiple %}
    <div attributes }}>
      {% for item in items %}
        <div {{ item.attributes }}>{{ item.content }}</div>
      {% endfor %}
    </div>
  {% else %}
    {% for item in items %}
      <div{{ attributes }}>{{ item.content }}</div>
    {% endfor %}
  {% endif %}
{% else %}
  <div class="cta-support-icon hidden xl:block"{{ attributes }}>
    <svg class="w-[70px] sm:w-[87px]" width="87" height="79" viewBox="0 0 87 79" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M43.6768 29.9374L50.1473 54.0855M19.6345 12.6544C7.40946 15.9301 0.15425 28.4965 3.42993 40.7215C9.3612 62.8573 40.9138 75.9711 56.2544 76.8773C69.0866 68.4222 89.855 41.289 83.9238 19.1532C80.6481 6.92825 68.0817 -0.326965 55.8567 2.94871C48.3708 4.95456 42.7461 10.4454 40.2658 17.2073C37.4456 14.8468 34.0982 13.2006 30.5069 12.4081C26.9156 11.6156 23.1862 11.7001 19.6345 12.6544ZM34.838 45.2467L58.9862 38.7762L34.838 45.2467Z" stroke="white" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
    {# <div class="5"{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>
    {% if multiple %}
      <div class="6">
    {% endif %}
    {% for item in items %}
      <div class="7"{{ item.attributes }}>{{ item.content }}</div>
    {% endfor %}
    {% if multiple %}
      </div>
    {% endif %} #}
  </div>
{% endif %}
